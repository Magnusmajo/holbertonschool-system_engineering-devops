# Web Infrastructure Design for www.foobar.com

## Components:
1. **3 Web Servers**: These servers will host the website content and handle user requests.
2. **3 Firewalls**: Each web server will be protected by a firewall to filter incoming and outgoing traffic.
3. **1 Load Balancer**: Distributes incoming traffic across the three web servers to ensure no single server is overwhelmed.
4. **1 SSL Certificate**: Ensures that traffic between the users and the web servers is encrypted and secure.
5. **3 Monitoring Clients**: Each web server will have a monitoring client to collect data for Sumologic or another monitoring service.

## Design:

### Explanation of Components:
- **Firewalls**: Firewalls are added to protect each web server by filtering incoming and outgoing traffic, preventing unauthorized access and potential attacks.
- **HTTPS Traffic**: Serving traffic over HTTPS using an SSL certificate ensures that the data transmitted between users and the web servers is encrypted, providing security and privacy.
- **Monitoring**: Monitoring clients are used to collect data on the performance and health of the web servers. This data is sent to Sumologic or another monitoring service to analyze and detect issues.
- **Monitoring Data Collection**: The monitoring tool collects data such as CPU usage, memory usage, disk I/O, and network traffic to provide insights into the server's performance.

### Monitoring QPS:
To monitor your web server's Queries Per Second (QPS), you can configure the monitoring clients to track the number of requests handled by the web servers over time. This data can be visualized in dashboards provided by the monitoring service.

### Issues with the Infrastructure:
- **SSL Termination at Load Balancer**: Terminating SSL at the load balancer level can be an issue because the traffic between the load balancer and the web servers is not encrypted, potentially exposing sensitive data.
- **Single MySQL Server for Writes**: Having only one MySQL server capable of accepting writes can create a single point of failure and limit scalability. If the server goes down, the entire database becomes unavailable for write operations.
- **Homogeneous Servers**: Having servers with all the same components (database, web server, and application server) can lead to resource contention and make it difficult to scale specific parts of the infrastructure independently.

